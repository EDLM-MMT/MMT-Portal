name: Docker-CI
#building image for argo
on:
  push:
    branches:
      - main
      - jstportal-docker
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

jobs:
    build-push-dockerhub:
        name: Build and push Docker image
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Code
          uses: actions/checkout@v2
        - name: Docker login
          env:
            DOCKER_USER: ${{ secrets.DOCKER_USER }}
            DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }} 
          run: |
            echo "Authenticate to Docker"
            docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
        - name: Docker build
          run: |
            echo "Starting docker build"
            docker build -t openlxp/elrr-jst-portal .
        - name: Push Image
          run: |
            echo "Pushing new image to the Dockerhub repo"
            docker push openlxp/elrr-jst-portal
    build-push-ECR:
        name: Build and push Docker image
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Code
          uses: actions/checkout@v2
        - name: ECR Login
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1
          with:
            mask-password: 'true'
        - name: Build, tag, and push image to Amazon ECR
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: ${{ secrets.ECR_REPO }}
            IMAGE_TAG: elrr-jst-portal
          run: |
            echo "Starting docker build"
            docker build --file Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
            echo "Pushing image to ECR..."
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG